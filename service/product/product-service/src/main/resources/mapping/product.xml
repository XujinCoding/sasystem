<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sa.product.mapper.mybaits.ProductMapper">


    <update id="changeTaskState">
        update BATCH_TASK_ITEM set STATE=#{status,jdbcType=NUMERIC},msg=#{msg,jdbcType=VARCHAR} where ID=#{id,jdbcType=NUMERIC}
    </update>
    <update id="setSuccessNumber">
        UPDATE BATCH_TASK SET SUCCESS_NUM=#{successNum} where TASK_ID=#{taskId}
    </update>

    <select id="getAll" resultType="com.sa.product.domain.Product">
        SELECT * FROM PRODUCT order by PRODUCT_ID
    </select>
    <select id="getProductById" resultType="com.sa.product.domain.Product">
        select * from PRODUCT where PRODUCT_ID=#{productId}
    </select>
    <select id="findByParameters" resultType="com.sa.product.domain.Product">
-- 从1 开始
        select pp.* from(
            select p.*,ROWNUM rowno from PRODUCT p
            <where>
                <if test="productId!=null and productId!=''">
                    PRODUCT_ID=#{productId}
                </if>
                <if test="productName!=null and productName!=''">
                    and PRODUCT_NAME=#{productName}
                </if>
                <if test="productPrice!=null and productPrice!=''">
                    and PRODUCT_PRICE=#{productPrice}
                </if>
                <if test="productNum!=null and productNum!=''">
                    and PRODUCT_NUM=#{productNum}
                </if>
                <if test="productRemark!=null and productRemark!=''">
                    and PRODUCT_REMARK=#{productRemark}
                </if>
                <if test="pageNum!=null and pageSize!=null">
                    and ROWNUM &lt;= ${pageNum * pageSize}
                </if>
            </where>
            ORDER BY PRODUCT_ID
            ) pp where
        <if test="pageNum!=null and pageSize!=null">
            rowno >= ${(pageNum-1) * pageSize+1}
        </if>
        ORDER BY PRODUCT_ID
    </select>

    <select id="getTaskType" resultType="com.sa.common.dto.job.Type">
        select TYPE from BATCH_TASK where TASK_ID=#{taskId,jdbcType=NUMERIC}
    </select>
    <select id="getProductDistinct" resultType="com.sa.product.domain.Product">
        select * from PRODUCT where PRODUCT_NAME=#{productName,jdbcType=VARCHAR} and PRODUCT_PRICE=#{productPrice,jdbcType=NUMERIC}
    </select>








    <update id="setFailNumber">
        UPDATE BATCH_TASK SET FAIL_NUM=#{failNum} where TASK_ID=#{taskId}
    </update>
    <select id="getFailNumber" resultType="java.lang.Integer">
        select COUNT(*) from BATCH_TASK_ITEM where TASK_ID=#{taskId,jdbcType=NUMERIC} and STATE=3
    </select>
    <select id="getTotalNumber" resultType="java.lang.Integer">
        select  TOTAL from  BATCH_TASK where TASK_ID=#{taskId,jdbcType=NUMERIC}
    </select>
    <select id="getSuccessNumber" resultType="java.lang.Integer">
        select COUNT(*) from BATCH_TASK_ITEM where TASK_ID=#{taskId,jdbcType=NUMERIC} and STATE=1
    </select>

    <select id="getNotRunningTask" resultType="com.sa.product.domain.BatchTask">
        select TASK_ID,TYPE,DATA from BATCH_TASK where STATE=0
    </select>
    <select id="getRunningTask" resultType="com.sa.product.domain.BatchTask">
        select TASK_ID,DATA
        from BATCH_TASK
        where STATE=2
    </select>
    <select id="getAllTasking" resultType="com.sa.product.domain.BatchTaskItem">
        select * from BATCH_TASK_ITEM where STATE=0
    </select>

    <update id="changeTaskTableState">
        update BATCH_TASK set STATE = #{state,jdbcType=NUMERIC} where TASK_ID=#{taskId,jdbcType=NUMERIC}
    </update>
    <update id="setTaskTotal">
        update BATCH_TASK set TOTAL=#{size,jdbcType=NUMERIC} where TASK_ID=#{taskId,jdbcType=NUMERIC}
    </update>
    <update id="setTaskStatus">
        update BATCH_TASK set STATE=#{status,jdbcType=NUMERIC} where TASK_ID=#{taskId}
    </update>
    <update id="setItemStatus">
        update BATCH_TASK_ITEM set STATE = #{status,jdbcType=NUMERIC},MSG = #{msg,jdbcType=VARCHAR} where TASK_ID = #{taskId,jdbcType=NUMERIC};
    </update>
    <insert id="addItem">
        insert into BATCH_TASK_ITEM
        (id, task_id, product_name, product_price, product_num, product_remark, state, msg)
        values
            (null,#{taskId,jdbcType=NUMERIC},
             #{productName,jdbcType=VARCHAR},
             #{productPrice,jdbcType=NUMERIC},
             #{productNum,jdbcType=NUMERIC},
             #{productRemark,jdbcType=VARCHAR},
             #{state,jdbcType=NUMERIC},
             #{msg,jdbcType=VARCHAR}
            )
    </insert>
    <insert id="submitTask">
        insert into BATCH_TASK (TASK_ID, TYPE, DATA, STATE)
        values(null,
               #{type,jdbcType=NUMERIC},
               #{data,jdbcType=VARCHAR},
               #{state,jdbcType=NUMERIC}
              )
    </insert>

</mapper>